@use "../_config/index" as *;

@keyframes invert-filter-bg {
  to {
    background-color: #fff;
  }
}

.pin-filter-container {
  --width-shrink: calc(var(--page-gap) + 20px);
  --margin-left: #{vw(-10)};

  grid-column: 1/8;
  margin-bottom: 30px;
  margin-left: 0;

  @media (--lg-max) {
    background-color: #fff;
    z-index: 10;
  }

  // noinspection CssInvalidMediaFeature
  @media (--lg) {
    margin-bottom: vw(55);
    margin-left: var(--margin-left);
    z-index: 500;
  }
}

body.filter-white .pin-filter-container.is-active {
  animation: invert-filter-bg 0s 0.1s forwards;
}

.filter {
  --padding: 5px;
  --gap-item: calc((25px - var(--padding) * 2) / 2);
  --icon-size: 16px;
  --duration: var(--trans-dur-fast);
  --ease: ease-in;

  @include base-property();
  @include list-unstyled();

  width: fit-content;
  display: grid;
  grid-auto-flow: column;
  align-items: center;
  justify-content: start;
  gap: 10px;
  margin-left: 0;
  padding: 0;
  transition: background-color var(--duration);
  z-index: 500;

  @media (--lg-max) {
    width: calc(100% + var(--base-page-gap) * 2);
    margin: 0 var(--base-page-gap-negative);
    padding: 15px var(--base-page-gap);
    background-color: #fff;
    overflow: auto;
  }

  // noinspection CssInvalidMediaFeature
  @media (--lg) {
    position: relative;
    height: 40px;
    padding: vw(10) calc(#{vw(15)} - var(--gap-item)) vw(10) vw(15);
  }
}

.filter::-webkit-scrollbar {
  display: none;
}

// TODO: replace to "body.os-win"
body:not(.os-mac) .filter {
  @media (--lg) {
    min-height: 46px;
    height: vw(46);
    padding: vw(12) calc(#{vw(15)} - var(--gap-item)) vw(10) vw(15);
  }
}

.filter__collapse {
  --size: calc(var(--icon-size) * 3.6);

  position: absolute;
  top: 0;
  left: calc(var(--size) / 4);
  z-index: 5;

  width: var(--size);
  height: 100%;

  font-size: 0;
  transform: scaleX(0);
}

.filter.is-pinned .filter__collapse {
  transform: scaleX(1);
}

.filter__collapse:focus,
.filter__collapse:hover {
  outline: 0;
}

.filter.is-pinned .filter__collapse:focus ~ .filter__icon,
.filter.is-pinned .filter__collapse:hover ~ .filter__icon {
  color: var(--c-red);
}

.filter__group {
  margin: 0 0 0 calc(var(--padding) * -1);
  padding: 0;
  border: 0;

  display: grid;
  grid-auto-flow: column;
  gap: var(--gap-item);

  transform: translateY(1px);
  transition-property: transform;

  // noinspection CssInvalidMediaFeature
  @media (--lg) {
    margin-left: 0;
  }
}

.filter.is-pinned:not(.is-active) .filter__group {
  position: absolute;
  transition-delay: var(--duration);
  transform: scaleX(0) translateY(-1px);
}

.filter__icon {
  display: none;
  position: relative;
  align-items: center;
  color: var(--c-dark-grey);
  fill: none;
  will-change: width;

  //noinspection CssInvalidMediaFeature
  @media (--lg) {
    display: flex;
  }
}

.filter.is-pinned .filter__icon {
  width: auto;
}

body.filter-white .filter.is-pinned .filter__icon {
  color: #fff;
}

body.filter-white .filter.is-pinned.is-active .filter__icon {
  color: var(--c-dark-grey);
}

.filter.is-pinned.is-active .filter__icon {
  color: #fff;
}

.filter__icon svg {
  width: var(--icon-size);
  stroke: currentColor;

  transform-origin: 55% 40%;
  transition-property: transform, stroke;
  transition-duration: var(--duration);
  transition-timing-function: var(--ease);
  transform: rotate(0deg); // windows

  //noinspection CssInvalidMediaFeature
  @media screen and (--desktop-md) {
    height: auto;
  }
}

body.os-mac .filter__icon svg {
  transform-origin: 58% 42%;
  transform: rotate(0deg) translateY(1px); // mac
}

.filter.is-pinned:not(.is-active) .filter__icon svg {
  transform: rotate(-90deg);
}

.filter__icon .icon-text {
  --pos-x: -10px;

  @include font-size-px($fz-text-sm);

  position: absolute;
  left: 100%;
  margin-left: 13px;

  color: var(--c-dark-grey);
  opacity: 0;
  transform: translate3d(var(--pos-x), 0, 0);

  transition-property: transform, opacity, color;
  transition-duration: 0s;
  transition-timing-function: var(--ease);
}

.filter.is-pinned .filter__icon .icon-text {
  --pos-x: 0;
  --delay: var(--duration);

  opacity: 1;

  transition: transform var(--trans-dur-faster) var(--delay) var(--ease),
    opacity var(--trans-dur-faster) var(--delay) var(--ease);
}

body.filter-white .filter.is-pinned .filter__icon .icon-text {
  color: #fff;
}

body.filter-white .filter.is-pinned.is-active .filter__icon .icon-text {
  color: var(--c-dark-grey);
}

.filter.is-pinned.is-active .filter__icon .icon-text {
  --pos-x: -10px;

  opacity: 0;
  transition: none;
}

.filter__radio-wrapper {
  --duration: 0s;

  position: relative;
  display: inline-block;
  transition-property: transform, opacity;
  transition-duration: var(--duration);
  transition-timing-function: var(--ease);
}

.filter.is-pinned:not(.is-active) .filter__radio-wrapper {
  opacity: 0;
  transform: translateX(-10px);
}

.filter.is-pinned.is-active .filter__radio-wrapper {
  --duration: var(--trans-dur-fast);
}

.filter__radio {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

// TODO: добавить -> display: inline-block; (как для "работы")
// Нужно будет проверять, не сломалось ли что. И точно надо немного скорректировать позицию.
// Ломается десктопный фильтр, когда прикрепляется. Вариант - делать только для мобилок/планшетов
// Или оставить локальное переопределение в компонентах (но это усложняет)
.filter__item {
  @include font-size-px($fz-text-16, 20);

  position: relative;
  padding: var(--padding);

  font-weight: 600;
  text-transform: uppercase;

  opacity: 0.5;
  cursor: pointer;
  transition-property: opacity, color;
  transition-duration: var(--trans-dur-faster);
  transition-timing-function: ease-in;

  //noinspection CssInvalidMediaFeature
  @media screen and (--tablet-sm) {
    font-size: 22px;

    transition-duration: 0s;
  }
}

.filter__item::after {
  content: "";
  position: absolute;
  bottom: calc(var(--padding) * 1.2);
  left: 50%;

  width: calc(100% - var(--padding) * 2);
  height: 1px;
  background-color: currentColor;

  transform-origin: 0 50%;
  transform: translateX(-50%) scale(0);

  transition: transform var(--trans-dur-faster) ease-in;

  //noinspection CssInvalidMediaFeature
  @media screen and (--tablet-sm) {
    bottom: calc(var(--padding) * 1.5);
    height: 2px;
  }
}

.filter__item:hover::after {
  transform: translateX(-50%) scale(1);
}

.filter__radio:checked + .filter__item {
  color: var(--c-red) !important;
  opacity: 1;

  &::after {
    transform: translateX(-50%) scale(1);
  }
}

.filter.is-pinned.is-active .filter__item {
  color: #fff;
}

body.filter-white .filter.is-pinned.is-active .filter__item {
  color: var(--c-dark-grey);
}
